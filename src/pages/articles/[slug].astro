---
import { marked } from 'marked';

interface Article {
  id: number;
  documentId: string;
  title: string;
  description: string;
  slug: string;
  createdAt: string;
  updatedAt: string;
  publishedAt: string;
  cover?: {
    id: number;
    documentId: string;
    name: string;
    alternativeText: string;
    caption: string;
    width: number;
    height: number;
    formats: {
      thumbnail: {
        url: string;
      };
      small: {
        url: string;
      };
      medium: {
        url: string;
      };
      large: {
        url: string;
      };
    };
    url: string;
  };
  author: {
    id: number;
    documentId: string;
    name: string;
    email: string;
  };
  category: {
    id: number;
    documentId: string;
    name: string;
    slug: string;
  };
  blocks: Array<{
    __component: string;
    id: number;
    body?: string;
    title?: string;
  }>;
}

export async function getStaticPaths() {
  try {
    const response = await fetch('https://realistic-fish-f8d57c663f.strapiapp.com/api/articles?populate=*');
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data = await response.json();
    
    if (!data.data || !Array.isArray(data.data)) {
      console.error('Invalid data structure received from Strapi:', data);
      return [];
    }

    const articles = data.data
      .filter((article: any) => article?.slug) // Only include articles with a slug
      .map((article: any) => article);

    if (articles.length === 0) {
      console.warn('No articles found with valid slugs');
      return [];
    }

    return articles.map((article: Article) => ({
      params: { slug: article.slug },
      props: { article },
    }));
  } catch (error) {
    console.error('Error fetching articles:', error);
    return [];
  }
}

const { article } = Astro.props as { article: Article };
const coverImageUrl = article.cover?.url 
  ? article.cover.url.startsWith('http') 
    ? article.cover.url 
    : `https://realistic-fish-f8d57c663f.media.strapiapp.com${article.cover.url}`
  : 'https://placehold.co/1200x400/1a1a1a/ffffff?text=No+Cover+Image';
---

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>{article.title}</title>
	</head>
	<body class="min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 text-white">
		<!-- Sticky Header -->
		<header class="sticky top-0 z-50 bg-gray-900/80 backdrop-blur-sm border-b border-gray-800">
			<div class="container mx-auto px-4 py-4 flex items-center justify-between">
				<a href="/" class="text-xl font-bold bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent">
					Gullible Galaxy
				</a>
				<nav class="flex items-center space-x-6">
					<a href="/" class="text-gray-300 hover:text-white transition-colors">
						← Back to Articles
					</a>
				</nav>
			</div>
		</header>

		<main class="container mx-auto px-4 py-8">
			<!-- Hero Section -->
			<div class="relative h-[60vh] mb-12 rounded-2xl overflow-hidden">
				<img
					src={coverImageUrl}
					alt={article.title}
					class="w-full h-full object-cover"
				/>
				<div class="absolute inset-0 bg-gradient-to-t from-gray-900 via-gray-900/50 to-transparent"></div>
				<div class="absolute bottom-0 left-0 right-0 p-8">
					<div class="flex items-center space-x-4 mb-4">
						<span class="px-3 py-1 bg-blue-500/20 text-blue-300 rounded-full text-sm">
							{article.category.name}
						</span>
						<span class="text-gray-400">by {article.author.name}</span>
					</div>
					<h1 class="text-4xl md:text-5xl font-bold mb-4">{article.title}</h1>
					<p class="text-xl text-gray-300 max-w-3xl">{article.description}</p>
				</div>
			</div>

			<!-- Article Content -->
			<article class="max-w-4xl mx-auto prose prose-invert prose-lg">
				{article.blocks.map((block) => {
					if (block.__component === 'shared.rich-text' && block.body) {
						return (
							<div class="mb-8" set:html={marked(block.body)} />
						);
					}
					if (block.__component === 'shared.quote' && block.title && block.body) {
						return (
							<blockquote class="border-l-4 border-blue-500 pl-4 my-8 italic text-xl text-gray-300">
								"{block.body}"
								<footer class="text-base text-gray-400 mt-2">— {block.title}</footer>
							</blockquote>
						);
					}
				})}
			</article>

			<!-- Metadata -->
			<div class="max-w-4xl mx-auto mt-12 pt-8 border-t border-gray-800">
				<div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-gray-400">
					<div class="flex items-center space-x-2">
						<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
							<path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
						</svg>
						<span>Created: {new Date(article.createdAt).toLocaleDateString()}</span>
					</div>
					<div class="flex items-center space-x-2">
						<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
							<path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd" />
						</svg>
						<span>Updated: {new Date(article.updatedAt).toLocaleDateString()}</span>
					</div>
					<div class="flex items-center space-x-2">
						<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
							<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
						</svg>
						<span>Published: {new Date(article.publishedAt).toLocaleDateString()}</span>
					</div>
				</div>
			</div>
		</main>

		<footer class="mt-16 py-8 border-t border-gray-800">
			<div class="container mx-auto px-4 text-center text-gray-400">
				<p>© {new Date().getFullYear()} Gullible Galaxy. All rights reserved.</p>
			</div>
		</footer>
	</body>
</html> 